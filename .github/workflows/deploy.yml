name: Deploy to Amazon ECS

on:
  push:
    branches:
      - master

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: public.ecr.aws/z0v5v7u9
  BACKEND_IMAGE: kelp
  NGINX_IMAGE: nginx
  IMAGE_TAG: latest
  ECS_CLUSTER: kelp
  ECS_SERVICE: kelp-service-x8ebg4lj

jobs:
  deploy:
    name: Build, Push to ECR Public, and Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build, tag, and push backend image to Amazon ECR Public
        run: |
          docker build -t $ECR_REGISTRY/$BACKEND_IMAGE:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$BACKEND_IMAGE:$IMAGE_TAG

      - name: Build, tag, and push NGINX image to Amazon ECR Public
        run: |
          docker build -t $ECR_REGISTRY/$NGINX_IMAGE:$IMAGE_TAG ./nginx 
          docker push $ECR_REGISTRY/$NGINX_IMAGE:$IMAGE_TAG

      - name: Force new deployment in ECS
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --force-new-deployment
